extend type Query @group(namespace: "App\\Http\\GraphQL") {
    users: [User!]! @field(resolver: "UserGQL@usersResolver")
    user(id: UUID!): User! @field(resolver: "UserGQL@userResolver")
}

extend type Mutation @group(namespace: "App\\Http\\GraphQL") {
    create_user(user: CreateUserInput!): CreateUser! @field(resolver: "UserGQL@createUserResolver")
    update_user(id: UUID!, user: UpdateUserInput!): UpdateUser! @field(resolver: "UserGQL@updateUserResolver")
    delete_user(id: UUID!): DeleteUser! @field(resolver: "UserGQL@deleteUserResolver")
}

type User {
    id: UUID!
    name: String!
    email: String!

    articles: [Article!]!
    comments: [Comment!]!
}

input CreateUserInput {
    name: String!
    email: String!
    password: String!
}

type CreateUser {
    user: User
}

input UpdateUserInput {
    name: String!
    email: String!
    password: String
}

type UpdateUser {
    user: User
}

type DeleteUser {
    ok: Boolean!
}
