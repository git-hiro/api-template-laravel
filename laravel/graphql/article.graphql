extend type Query @group(namespace: "App\\Http\\GraphQL") {
    articles: [Article!]! @field(resolver: "ArticleGQL@articlesResolver")
    article(id: UUID): Article! @field(resolver: "ArticleGQL@articleResolver")
}

extend type Mutation @group(namespace: "App\\Http\\GraphQL") {
    create_article(article: CreateArticleInput!): CreateArticle! @field(resolver: "ArticleGQL@createArticleResolver")
    update_article(id: UUID!, article: UpdateArticleInput!): UpdateArticle! @field(resolver: "ArticleGQL@updateArticleResolver")
    delete_article(id: UUID!): DeleteArticle! @field(resolver: "ArticleGQL@deleteArticleResolver")

    create_article_comment(article_id: UUID!, comment: CreateArticleCommentInput!): CreateArticleComment! @field(resolver: "ArticleGQL@createArticleCommentResolver")
}

type Article {
    id: UUID!
    user_id: UUID!
    subject: String!
    content: String!

    user: User!
    comments: [Comment!]!
}

input CreateArticleInput {
    subject: String!
    content: String!
}

type CreateArticle {
    article: Article
}

input UpdateArticleInput {
    subject: String!
    content: String!
}

type UpdateArticle {
    article: Article
}

type DeleteArticle {
    ok: Boolean!
}

input CreateArticleCommentInput {
    content: String!
}

type CreateArticleComment {
    comment: Comment
}
